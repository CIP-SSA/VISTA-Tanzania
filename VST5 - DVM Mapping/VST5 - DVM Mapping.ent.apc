{Application 'VST5_DVM_MAPPING' logic file generated by CSPro}
PROC GLOBAL

numeric currentLineNumber;
array string labels(100);
array string vil_codes(100);
array numeric codes(100);


PROC VST5_DVM_MAPPING_FF

PROC VST5_DVM_MAPPING_QUEST_FORM

PROC REGION_NAME

PREPROC
$= TOUPPER(GETLABEL(REGION_CODE,REGION_CODE));
NOINPUT;

POSTPROC
IF $ = "" THEN
	ERRMSG("Region Name should be filled");
	MOVE TO REGION_CODE ADVANCE;
ENDIF;
PROC DISTRICT_CODE

onfocus
// create dynamic value set for districts in selected Region
//using lookup file

if loadcase(DISTRICTSPERREGION_DICT,REGION_CODE) = 1 then

	// In the lookup file, DISTRICTSPERREGION_REC is a multiply occurring
	// record since there is more than one DISTRICT per REGION. We
	// need to iterate through all the DISTRICTS in the REGION
	// and load them to the value set.
	numeric x;
	do x = 1 while x <= count(DISTRICTSPERREGION_DICT.DISTRICTSPERREGION_REC)
		labels(x) = DPR_DISTRICT_NAME(x);
		codes(x) = DPR_DISTRICT_CODE(x);
	enddo;
	codes(x) = notappl;
	setvalueset(DISTRICT_CODE, codes, labels);
endif;
PROC DISTRICT_NAME

PREPROC
$= TOUPPER(GETLABEL(DISTRICT_CODE,DISTRICT_CODE));
NOINPUT;

POSTPROC
IF $ = "" THEN
	ERRMSG("District Name should be filled");
	MOVE TO DISTRICT_CODE ADVANCE;
ELSE
	IF REGION_CODE <> TONUMBER(EDIT("99",DISTRICT_CODE)[1:1]) THEN;
		ERRMSG("%s District is not in %s Region. Please verify and correct",STRIP(GETLABEL(DISTRICT_CODE,DISTRICT_CODE)),STRIP(GETLABEL(REGION_CODE,REGION_CODE)));
		MOVE TO DISTRICT_CODE ADVANCE;
	ENDIF;
ENDIF;	
PROC WARD_CODE

onfocus
// create dynamic value set for wards in selected district
//using lookup file

if loadcase(WARDSPERDISTRICT_DICT,DISTRICT_CODE) = 1 then

	// In the lookup file, WARDSPERDISTRICT_REC is a multiply occurring
	// record since there is more than one DISTRICT per REGION. We
	// need to iterate through all the DISTRICTS in the REGION
	// and load them to the value set.
	numeric x;
	do x = 1 while x <= count(WARDSPERDISTRICT_DICT.WARDSPERDISTRICT_REC)
		labels(x) = WPD_WARD_NAME(x);
		codes(x) = WPD_WARD_CODE(x);
	enddo;
	codes(x) = notappl;
	setvalueset(WARD_CODE, codes, labels);
endif;
PROC WARD_NAME

PREPROC
$= TOUPPER(GETLABEL(WARD_CODE,WARD_CODE));
NOINPUT;

POSTPROC
IF $ = "" THEN
	ERRMSG("Ward Name should be filled");
	MOVE TO WARD_CODE ADVANCE;
ELSE;
	IF DISTRICT_CODE <> TONUMBER(EDIT("9999",WARD_CODE)[1:2]) THEN;
		ERRMSG("%s Ward is not in %s District. Please verify and correct",STRIP(GETLABEL(WARD_CODE,WARD_CODE)),STRIP(GETLABEL(DISTRICT_CODE,DISTRICT_CODE)));
		MOVE TO WARD_CODE ADVANCE;
	ENDIF;	
ENDIF;
PROC VILLAGE_CODE

onfocus
// create dynamic value set for villages in selected ward
//using lookup file

if loadcase(VILLAGESPERWARD_DICT,WARD_CODE) = 1 then

	// In the lookup file, VILLAGESPERWARD_REC is a multiply occurring
	// record since there is more than one DISTRICT per REGION. We
	// need to iterate through all the DISTRICTS in the REGION
	// and load them to the value set.
	numeric x;
	do x = 1 while x <= count(VILLAGESPERWARD_DICT.VILLAGESPERWARD_REC)
		labels(x) = VPW_VILLAGE_NAME(x);
		vil_codes(x) = VPW_VILLAGE_CODE(x);
	enddo;
	codes(x) = notappl;
	setvalueset(VILLAGE_CODE, vil_codes, labels);
endif;
PROC VILLAGE_NAME

PREPROC
$= TOUPPER(GETLABEL(VILLAGE_CODE,VILLAGE_CODE));
NOINPUT;

POSTPROC
IF $ = "" THEN
	ERRMSG("Village Name should be filled");
	MOVE TO VILLAGE_CODE ADVANCE;
ELSE;
	IF WARD_CODE <> TONUMBER(VILLAGE_CODE[1:4]) THEN;
		ERRMSG("%s Village is not in %s Ward. Please verify and correct",STRIP(GETLABEL(VILLAGE_CODE,VILLAGE_CODE)),STRIP(GETLABEL(WARD_CODE,WARD_CODE)));
		MOVE TO VILLAGE_CODE ADVANCE;
	ENDIF;	
ENDIF;
PROC OFFICER_CODE

PREPROC
$ = 98;
NOINPUT;
PROC OFFICER_NAME

POSTPROC
IF $ = "" THEN
	ERRMSG("Field Officer in-charge should be filled");
	REENTER;
ENDIF;
PROC DOE

POSTPROC
IF $ IN MISSING, NOTAPPL THEN
	ERRMSG("Date should be filled");
	REENTER;
ENDIF;
PROC SHEET

POSTPROC
IF $ IN 0, MISSING, NOTAPPL THEN
	ERRMSG("Sheet Number should be filled");
	REENTER;
ENDIF;
PROC DVM_FIRST_NAME

POSTPROC
IF $ = "" THEN
	ERRMSG("First Name of DVM should be filled");
	REENTER;
ENDIF;
PROC DVM_LAST_NAME

POSTPROC
IF $ = "" THEN
	ERRMSG("Last Name of DVM should be filled");
	REENTER;
ENDIF;
PROC MOBILE_NUMBER

POSTPROC
IF $ IN 0, MISSING, NOTAPPL THEN
	ERRMSG("Please enter Mobile Number of the DVM");
	REENTER;
ELSEIF LENGTH(EDIT("9999999999",$)) <> 10 THEN
	ERRMSG("The Mobile Number looks invalid");
	REENTER;
ENDIF;
PROC GPS_LAT

PREPROC
gps (open);
if gps(read, 60, 10)  then // Read up to 60 seconds, try for 10m accuracy 
    errmsg("Latitude is %f, longitude is %f, altitude is %f",gps(latitude),gps(longitude), gps (altitude));
    GPS_LAT = gps(latitude);
    GPS_LON = gps(longitude);
    GPS_ALT = gps(altitude);
    GPS_ACC = gps(accuracy);
else
    errmsg("GPS signal could not be acquired");
endif;
gps (close);

advance to GROUP000;
PROC CROPS000

NUMERIC i;
IF CROP_NAME(1) = "" THEN
	ERRMSG("There must be at least 1 Crop produced");
	MOVE TO SP_MULT_MON ADVANCE;
ELSE;
	i = 1;
	IF TOTOCC(CROPS000) > 0 THEN
		WHILE i <= TOTOCC(CROPS000) DO
			IF CROP_NAME(i) = "" THEN
				DELETE(CROPS000(i));
				BREAK;
			ELSE
				i = i+1;
			ENDIF;
		ENDDO;
	ENDIF;
ENDIF;
PROC CROP_NAME

//store current ocurrence for displaying in CAPI question 
onfocus
currentLineNumber = curocc();

POSTPROC
IF $ = "" THEN
	ENDGROUP;
ENDIF;
PROC PROFIT_CROP1

	IF $ = "" THEN
		SKIP TO OTHER_SEED;
	ELSE;

		NUMERIC i = 1;
		NUMERIC j = 0;
		IF TOTOCC(CROPS000) > 0 THEN
			WHILE i <= TOTOCC(CROPS000) DO
				IF STRIP(CROP_NAME(i)) = STRIP($) THEN
					j = 1;
					BREAK;
				ELSE
					i = i+1;
				ENDIF;
			ENDDO;
		ENDIF;

		IF j = 0 THEN
			ERRMSG("The crop %s is not listed as among crops produced by the DVM above",STRIP($));
			REENTER;
		ENDIF;
	ENDIF;

PROC PROFIT_CROP2

	IF $ = "" THEN
		SKIP TO OTHER_SEED;
	ELSE;

		NUMERIC i = 1;
		NUMERIC j = 0;
		IF TOTOCC(CROPS000) > 0 THEN
			WHILE i <= TOTOCC(CROPS000) DO
				IF STRIP(CROP_NAME(i)) = STRIP($) THEN
					j = 1;
					BREAK;
				ELSE
					i = i+1;
				ENDIF;
			ENDDO;
		ENDIF;

		IF j = 0 THEN
			ERRMSG("The crop %s is not listed as among crops produced by the DVM above",STRIP($));
			REENTER;
		ENDIF;
	ENDIF;
PROC PROFIT_CROP3

	IF $ = "" THEN
		SKIP TO OTHER_SEED;
	ELSE;

		NUMERIC i = 1;
		NUMERIC j = 0;
		IF TOTOCC(CROPS000) > 0 THEN
			WHILE i <= TOTOCC(CROPS000) DO
				IF STRIP(CROP_NAME(i)) = STRIP($) THEN
					j = 1;
					BREAK;
				ELSE
					i = i+1;
				ENDIF;
			ENDDO;
		ENDIF;

		IF j = 0 THEN
			ERRMSG("The crop %s is not listed as among crops produced by the DVM above",STRIP($));
			REENTER;
		ENDIF;
	ENDIF;
PROC IRRIGATION

IF $ <> 1 THEN
	SKIP TO DOMINANT_SOIL_TYPE;
ENDIF;
PROC OTHER_IRRIG_SYSTEM

PREPROC
NUMERIC i = 0;
NUMERIC j = 0;

WHILE i <= 7 DO
	IF IRRIG_SYSTEM[i:1] = "G" THEN
		j = 1;
		BREAK;
	ENDIF;
    i = i + 1;
ENDDO;

IF j <> 1 THEN
	SKIP TO IRRIG_ACRES;
ENDIF;

POSTPROC
IF $ = "" AND j = 1 THEN
	ERRMSG("Please specify the other irrigation system");
	REENTER;
ENDIF;
PROC IRRIG_ACRES

IF IRRIGATION = 1 AND $ IN 0,MISSING, NOTAPPL THEN
	ERRMSG("Please enter number of Acreage under Irrigation");
	REENTER;
ENDIF;
PROC FARMER_GROUP

IF $ <> 1 THEN
	SKIP TO RELIGION;
ENDIF;
PROC GROUP_NAME

IF FARMER_GROUP = 1 AND $ = "" THEN
	ERRMSG("Please enter name of farmer group");
	REENTER;
ENDIF;
PROC EXTENSION

IF $ <> 4 THEN
	SKIP TO SUPPORT;
ENDIF;
PROC OTHER_AGENT

IF EXTENSION = 4 AND $ = "" THEN
	ERRMSG("Please enter the Other principal Extension Staff");
	REENTER;
ENDIF;
PROC OTHER_SUPPORT

PREPROC
NUMERIC i = 0;
NUMERIC j = 0;

WHILE i <= 5 DO
	IF SUPPORT[i:1] = "E" THEN
		j = 1;
		BREAK;
	ENDIF;
    i = i + 1;
ENDDO;

IF j <> 1 THEN
	SKIP TO PHOTO;
ENDIF;

POSTPROC
IF $ = "" AND j = 1 THEN
	ERRMSG("Please specify the other training event");
	REENTER;
ENDIF;
PROC PHOTO

onfocus
string photoFilename = maketext("%sphotos/photo-%s-%s.jpg", 
								pathname(Application), 
								VILLAGE_CODE,concat(strip(DVM_FIRST_NAME)," ", strip(DVM_LAST_NAME)));

// Only show the view and keep options in value set
// if the photo exists.
if fileexist(photoFilename) then
	setvalueset(PHOTO, PHOTO_VS_PHOTO_TAKEN);
else
	setvalueset(PHOTO, PHOTO_VS_NO_PHOTO);
endif;

postproc


if PHOTO = 1 then
	// Take/retake photo
	execsystem(maketext("camera:%s", photoFilename));
	
	// reenter so that interview can retake if it is not good.
	reenter;
elseif PHOTO = 2 then
	// view existing photo
	execsystem(maketext("view:%s", photoFilename));
	
	// reenter so that interview can retake if it is not good.
	reenter;
elseif PHOTO = 3 then
	// Keep photo - move to next field
elseif PHOTO = 9 then
	// No photo (refused)
	// Delete photo if it exists
	filedelete(photoFilename);
endif;
