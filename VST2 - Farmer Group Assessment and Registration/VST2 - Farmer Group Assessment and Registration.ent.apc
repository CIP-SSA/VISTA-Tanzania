{Application 'VST2_FARMER_GROUP_ASSESSMENT_A' logic file generated by CSPro}
PROC GLOBAL
numeric currentLineNumber;
array string labels(100);
array string vil_codes(100);
array numeric codes(100);

{
// Run synchronisation
function launchSync()
	sync("Survey Upload Data Dropbox.pnc", queue);
end;

PROC VST2_FARMER_GROUP_ASSESSMENT__FF
preproc
userbar(clear);
userbar(add button, "Sync", launchSync());
userbar(show);
}


PROC VST2_FARMER_GROUP_ASSESSMENT__FF

PROC REGION_NAME

PREPROC
$= TOUPPER(GETLABEL(REGION_CODE,REGION_CODE));
NOINPUT;

POSTPROC
IF $ = "" THEN
	ERRMSG("Region Name should be filled");
	MOVE TO REGION_CODE ADVANCE;
ENDIF;
PROC DISTRICT_CODE

onfocus
// create dynamic value set for districts in selected Region
//using lookup file

if loadcase(DISTRICTSPERREGION_DICT,REGION_CODE) = 1 then

	// In the lookup file, DISTRICTSPERREGION_REC is a multiply occurring
	// record since there is more than one DISTRICT per REGION. We
	// need to iterate through all the DISTRICTS in the REGION
	// and load them to the value set.
	numeric x;
	do x = 1 while x <= count(DISTRICTSPERREGION_DICT.DISTRICTSPERREGION_REC)
		labels(x) = DPR_DISTRICT_NAME(x);
		codes(x) = DPR_DISTRICT_CODE(x);
	enddo;
	codes(x) = notappl;
	setvalueset(DISTRICT_CODE, codes, labels);
endif;

PROC DISTRICT_NAME

PREPROC
$= TOUPPER(GETLABEL(DISTRICT_CODE,DISTRICT_CODE));
NOINPUT;

POSTPROC
IF $ = "" THEN
	ERRMSG("District Name should be filled");
	MOVE TO DISTRICT_CODE ADVANCE;
ELSE
	IF REGION_CODE <> TONUMBER(EDIT("99",DISTRICT_CODE)[1:1]) THEN;
		ERRMSG("%s District is not in %s Region. Please verify and correct",STRIP(GETLABEL(DISTRICT_CODE,DISTRICT_CODE)),STRIP(GETLABEL(REGION_CODE,REGION_CODE)));
		MOVE TO DISTRICT_CODE ADVANCE;
	ENDIF;
ENDIF;	
PROC WARD_CODE

onfocus
// create dynamic value set for wards in selected district
//using lookup file

if loadcase(WARDSPERDISTRICT_DICT,DISTRICT_CODE) = 1 then

	// In the lookup file, WARDSPERDISTRICT_REC is a multiply occurring
	// record since there is more than one DISTRICT per REGION. We
	// need to iterate through all the DISTRICTS in the REGION
	// and load them to the value set.
	numeric x;
	do x = 1 while x <= count(WARDSPERDISTRICT_DICT.WARDSPERDISTRICT_REC)
		labels(x) = WPD_WARD_NAME(x);
		codes(x) = WPD_WARD_CODE(x);
	enddo;
	codes(x) = notappl;
	setvalueset(WARD_CODE, codes, labels);
endif;
PROC WARD_NAME

PREPROC
$= TOUPPER(GETLABEL(WARD_CODE,WARD_CODE));
NOINPUT;

POSTPROC
IF $ = "" THEN
	ERRMSG("Ward Name should be filled");
	MOVE TO WARD_CODE ADVANCE;
ELSE;
	IF DISTRICT_CODE <> TONUMBER(EDIT("9999",WARD_CODE)[1:2]) THEN;
		ERRMSG("%s Ward is not in %s District. Please verify and correct",STRIP(GETLABEL(WARD_CODE,WARD_CODE)),STRIP(GETLABEL(DISTRICT_CODE,DISTRICT_CODE)));
		MOVE TO WARD_CODE ADVANCE;
	ENDIF;	
ENDIF;
PROC VILLAGE_CODE

onfocus
// create dynamic value set for villages in selected ward
//using lookup file

if loadcase(VILLAGESPERWARD_DICT,WARD_CODE) = 1 then

	// In the lookup file, VILLAGESPERWARD_REC is a multiply occurring
	// record since there is more than one DISTRICT per REGION. We
	// need to iterate through all the DISTRICTS in the REGION
	// and load them to the value set.
	numeric x;
	do x = 1 while x <= count(VILLAGESPERWARD_DICT.VILLAGESPERWARD_REC)
		labels(x) = VPW_VILLAGE_NAME(x);
		vil_codes(x) = VPW_VILLAGE_CODE(x);
	enddo;
	codes(x) = notappl;
	setvalueset(VILLAGE_CODE, vil_codes, labels);
endif;
PROC VILLAGE_NAME

PREPROC
$= TOUPPER(GETLABEL(VILLAGE_CODE,VILLAGE_CODE));
NOINPUT;

POSTPROC
IF $ = "" THEN
	ERRMSG("Village Name should be filled");
	MOVE TO VILLAGE_CODE ADVANCE;
ELSE;
	IF WARD_CODE <> TONUMBER(VILLAGE_CODE[1:4]) THEN;
		ERRMSG("%s Village is not in %s Ward. Please verify and correct",STRIP(GETLABEL(VILLAGE_CODE,VILLAGE_CODE)),STRIP(GETLABEL(WARD_CODE,WARD_CODE)));
		MOVE TO VILLAGE_CODE ADVANCE;
	ENDIF;	
ENDIF;
PROC OFFICER_CODE

PREPROC
$ = 98;
NOINPUT;
PROC OFFICER_NAME

POSTPROC
IF $ = "" THEN
	ERRMSG("Field Officer in-charge should be filled");
	REENTER;
ENDIF;
PROC DOE

POSTPROC
IF $ IN MISSING, NOTAPPL THEN
	ERRMSG("Date should be filled");
	REENTER;
ENDIF;
PROC SHEET

POSTPROC
IF $ IN 0, MISSING, NOTAPPL THEN
	ERRMSG("Sheet Number should be filled");
	REENTER;
ENDIF;
PROC GROUP_NAME

POSTPROC
IF $ = "" THEN
	ERRMSG("Name of Group should be filled");
	REENTER;
ENDIF;
PROC CHAIRPERSON

POSTPROC
IF $ = "" THEN
	ERRMSG("Name of Chairman should be filled");
	REENTER;
ENDIF;
PROC CHAIRPERSON_MOBILE

POSTPROC
IF $ IN 0, MISSING, NOTAPPL THEN
	ERRMSG("Please enter Mobile Number of the Chairman");
	REENTER;
ELSEIF LENGTH(EDIT("9999999999",$)) <> 10 THEN
	ERRMSG("The Mobile Number looks invalid");
	REENTER;
ENDIF;
PROC SECRETARY

POSTPROC
IF $  = "" THEN
	ERRMSG("Name of Secretary should be filled");
	REENTER;
ENDIF;
PROC SECRETARY_MOBILE

POSTPROC
IF $ IN 0, MISSING, NOTAPPL THEN
	ERRMSG("Please enter Mobile Number of the Secretary");
	REENTER;
ELSEIF LENGTH(EDIT("9999999999",$)) <> 10 THEN
	ERRMSG("The Mobile Number looks invalid");
	REENTER;
ENDIF;
PROC DATE_ESTABLISH

POSTPROC
IF $ IN MISSING, NOTAPPL THEN
	ERRMSG("Date of establishment should be filled");
	REENTER;
ENDIF;
PROC DATE_OF_REGISTRATION

PREPROC
IF REGISTERED <> 1 THEN
	SKIP TO NO_MALES;
ENDIF;

POSTPROC
IF $ IN MISSING, NOTAPPL THEN
	ERRMSG("Date of registration should be filled");
	REENTER;
ENDIF;
PROC NO_FEMALES

POSTPROC
IF $ + NO_MALES < 1 THEN
	ERRMSG("There should at least be 1 or more members in the group");
	REENTER;
ENDIF;
PROC ACTIVE_MALES

POSTPROC
IF $ > NO_MALES THEN
	ERRMSG("Number of active Males cannot be more than total male members");
	REENTER;
ENDIF;
PROC ACTIVE_FEMALES

POSTPROC
IF $ > NO_FEMALES THEN
	ERRMSG("Number of active Females cannot be more than total male members");
	REENTER;
ENDIF;
PROC ACRE_OWNED

POSTPROC
IF $ IN 0, MISSING, NOTAPPL THEN
	ERRMSG("Total acreage should be filled");
	REENTER;
ENDIF;
PROC PARTNERS

POSTPROC
IF $ <> 1 THEN
	SKIP TO CROPS000;
ENDIF;
PROC PARTNERT000

NUMERIC i;
IF PARTNER_NAME(1) = "" THEN
	ERRMSG("There must be at least 1 Development Partner / Organisation");
	MOVE TO PARTNERS ADVANCE;
ELSE;
	i = 1;
	IF TOTOCC(PARTNERT000) > 0 THEN
		WHILE i <= TOTOCC(PARTNERT000) DO
			IF PARTNER_NAME(i) = "" THEN
				DELETE(PARTNERT000(i));
				BREAK;
			ELSE
				i = i+1;
			ENDIF;
		ENDDO;
	ENDIF;
ENDIF;
PROC PARTNER_NAME

POSTPROC
IF $ = "" THEN
	ENDGROUP;
ENDIF;
PROC CROPS000

NUMERIC i;
IF CROP_NAME(1) = "" THEN
	ERRMSG("There must be at least 1 Crop produced");
	MOVE TO PARTNERT000 ADVANCE;
ELSE;
	i = 1;
	IF TOTOCC(CROPS000) > 0 THEN
		WHILE i <= TOTOCC(CROPS000) DO
			IF CROP_NAME(i) = "" THEN
				DELETE(CROPS000(i));
				BREAK;
			ELSE
				i = i+1;
			ENDIF;
		ENDDO;
	ENDIF;
ENDIF;
PROC CROP_NAME

//store current ocurrence for displaying in CAPI question 
onfocus
currentLineNumber = curocc();

POSTPROC
IF $ = "" THEN
	ENDGROUP;
ENDIF;
PROC DO_YOU_HAVE_INTEREST

POSTPROC
IF $ <> 1 THEN
	SKIP TO IRRIGATION;
ENDIF;
PROC WHICH_ONES_1

POSTPROC
IF $ = "" THEN
	ERRMSG("At least one crop should be filled");
	REENTER;
ENDIF;
PROC WHICH_ONES_2

POSTPROC
IF $ = "" THEN
	SKIP TO IRRIGATION;
ENDIF;
PROC WHICH_ONES_3

POSTPROC
IF $ = "" THEN
	SKIP TO IRRIGATION;
ENDIF;
PROC WHICH_ONES_4

POSTPROC
IF $ = "" THEN
	SKIP TO IRRIGATION;
ENDIF;
PROC WHICH_ONES_5

POSTPROC
IF $ = "" THEN
	SKIP TO IRRIGATION;
ENDIF;
PROC OTHER_GAP

POSTPROC
IF $ <> 1 THEN
	SKIP TO GROUP001;
ENDIF;
PROC FINANCE

POSTPROC
IF $ <> 1 THEN
	SKIP TO GROUP_MEMBERS000;
ENDIF;
PROC FINANCIAL_ASSISTANCE_1

POSTPROC
IF $ = "" THEN
	ERRMSG("At least one financial assistence should be filled");
	REENTER;
ENDIF;
PROC FINANCIAL_ASSISTANCE_2

POSTPROC
IF $ = "" THEN
	SKIP TO GROUP_MEMBERS000;
ENDIF;
PROC FINANCIAL_ASSISTANCE_3

POSTPROC
IF $ = "" THEN
	SKIP TO GROUP_MEMBERS000;
ENDIF;
PROC FINANCIAL_ASSISTANCE_4

POSTPROC
IF $ = "" THEN
	SKIP TO GROUP_MEMBERS000;
ENDIF;
PROC FINANCIAL_ASSISTANCE_5

POSTPROC
IF $ = "" THEN
	SKIP TO GROUP_MEMBERS000;
ENDIF;
PROC GROUP_MEMBERS000

NUMERIC i;
IF FIRST_NAME(1) = "" THEN
	ERRMSG("There must be at least 1 Group Member");
	MOVE TO FINANCE ADVANCE;
ELSE;
	i = 1;
	IF TOTOCC(GROUP_MEMBERS000) > 0 THEN
		WHILE i <= TOTOCC(GROUP_MEMBERS000) DO
			IF FIRST_NAME(i) = "" THEN
				DELETE(GROUP_MEMBERS000(i));
				BREAK;
			ELSE
				i = i+1;
			ENDIF;
		ENDDO;
	ENDIF;
ENDIF;
PROC FIRST_NAME

//store current ocurrence for displaying in CAPI question 
onfocus
currentLineNumber = curocc();

POSTPROC
IF $ = "" THEN
	IF ACCEPT("You have not entered any First name. Is this the end of Group Members?",
			  "Yes", "No") <> 1 THEN
		REENTER;
	ELSE;
		ENDGROUP;
	ENDIF;
ENDIF;
PROC SURNAME

POSTPROC
IF $ = "" THEN
	ERRMSG("SURNAME of Group Member should be filled");
	REENTER;
ENDIF;
